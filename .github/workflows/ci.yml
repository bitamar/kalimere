name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  api:
    name: API - Build, Lint & Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: kalimere_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: api/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Wait for database
        run: npx wait-on tcp:127.0.0.1:5432

      - name: Run migrations
        env:
          DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/kalimere_test
        run: npm run db:migrate

      - name: TypeScript compilation
        run: npm run build

      - name: Lint
        run: npm run lint

      - name: Run tests
        env:
          NODE_ENV: test
          TEST_DATABASE_URL: postgres://postgres:postgres@127.0.0.1:5432/kalimere_test
        run: npm test

      - name: Cleanup database
        if: always()
        env:
          PGPASSWORD: postgres
        run: psql -h 127.0.0.1 -U postgres -c 'DROP DATABASE IF EXISTS kalimere_test;' postgres

  frontend:
    name: Frontend - Build, Lint & Format Check
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./front

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: front/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: TypeScript compilation
        run: npx tsc --noEmit

      - name: Lint
        run: npm run lint

      - name: Format check
        run: npm run format:check

      - name: Build
        run: npm run build
